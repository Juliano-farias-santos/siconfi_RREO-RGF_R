# ------------------------------------RGF

# Load required libraries
library(httr)       # For making HTTP requests
library(jsonlite)   # For working with JSON data
library(stringr)    # For string manipulation
library(dplyr)      # For data manipulation with data frames
library(tidyr)      # For data transformation (tidy data)

# Vector containing the codes of the 27 Brazilian states (UFs)
uf <- c(11,12,13,14,15,16,17, 
        21,22,23,24,25,26,27,28,29, 
        31,32,33,35,
        41,42,43,
        50,51,52,53)

# Function to fetch RGF (Fiscal Management Report) data from the Brazilian Treasury API
Pegar_rgf <- function(ano, quadrimestre, ente, anexo, poder){
  
  # Base URL of the API
  base_url_rgf <- "http://apidatalake.tesouro.gov.br/ords/siconfi/tt/rgf?"
  
  # Convert numeric parameters to character
  ano <- as.character(ano)
  quadrimestre <- as.character(quadrimestre)
  
  # Define report type and format annex name
  tipo_relatorio <- "RGF"
  num_anexo <- paste("RGF-Anexo%200", anexo, sep = "")
  
  # Just to ensure `poder` and `ente` are assigned properly
  poder <- poder
  ente <- as.character(ente)
  
  # Initialize an empty data frame to store results
  d <- data.frame()
  
  # Character vector to store the full URLs to request
  x <- vector("character", length(as.numeric(ano)) * length(as.numeric(quadrimestre)))
  k <- 0
  
  # Generate the list of URLs based on input parameters
  for (i in 1:length(ano)){
    for(j in 1:length(quadrimestre)){
      k <- k + 1
      x[k] <-  paste(base_url_rgf,
                     "an_exercicio=", ano[i], "&",
                     "in_periodicidade=Q&nr_periodo=", quadrimestre[j], "&",
                     "co_tipo_demonstrativo=", tipo_relatorio, "&",
                     "no_anexo=", num_anexo, "&co_esfera=E&co_poder=", poder,
                     "&id_ente=", ente, sep = "")
    }
  }
  
  # Make the API requests and build the final data frame
  for(i in 1:length(x)){
    
    rgf <- GET(x[i])  # HTTP GET request
    print(status_code(rgf))  # Print HTTP response status (200 = success)
    
    rgf_txt <- content(rgf, as="text", encoding="UTF-8")   # Get content as text
    rgf_json <- fromJSON(rgf_txt, flatten = FALSE)         # Parse JSON into a list
    rgf_df <- as.data.frame(rgf_json[["items"]])           # Extract "items" and convert to data frame
    
    d <- rbind(d, rgf_df)  # Append to final data frame
  }
  
  return(d)  # Return the collected data
}

# Test the function for a single state (state 41, 1st quarter of 2023, annex 1, Executive branch)
Pegar_rgf(2023, 1, 41, 1, "E")

# Initialize an empty data frame to collect data from all states
rgfAnexo1 <- data.frame()

# Loop to collect Annex 1 RGF data for all 27 states in the 3rd quarter of 2023, Legislative branch
for (i in 1:27) {
  rgfAnexo1 <- rbind(rgfAnexo1, Pegar_rgf(2023, 3, uf[i], 1, "D"))
}

# Save the final result as a CSV file at the specified location
write.csv(rgfAnexo1, "C:\\Users\\06805178983\\Desktop\\dir\\2024.02.07_rgfAnexo1.csv", row.names = FALSE)
